inpatients_2012$avg.medicare.payments <- as.numeric(as.character(inpatients_2012$avg.medicare.payments))
inpatients_2013$avg.covered.charges<- as.numeric(as.character(inpatients_2013$avg.covered.charges))
inpatients_2013$avg.total.payments<- as.numeric(as.character(inpatients_2013$avg.total.payments))
inpatients_2013$avg.medicare.payments <- as.numeric(as.character(inpatients_2013$avg.medicare.payments))
# This script joins together all the DRG data for the years 2011, 2012, 2013, 2014, 2015 together
# To Make it Into One MASSIVE DATASET
# The dplyr library will be used to mutate columns and to join the various datasets
library(dplyr)
library(readr)
# Creating a dataframe for each year by reading the data from the csvs
inpatients_2011<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2011.csv")
inpatients_2012<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2012.csv")
inpatients_2013<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2013.csv")
inpatients_2011<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2011.csv")
inpatients_2012<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2012.csv")
inpatients_2013<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2013.csv")
inpatients_2014<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2014.csv")
inpatients_2015<-read.csv("../../ProjectData/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2015.csv")
# Adding a year column to each dataset
inpatients_2011$Year = 2011
inpatients_2012$Year = 2012
inpatients_2013$Year = 2013
inpatients_2014$Year = 2014
inpatients_2015$Year = 2015
# Checking the colnames for all the datasets
colnames(inpatients_2011, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2012, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2013, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2014, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2015, do.NULL = TRUE, prefix = "col")
# Giving all the datasets the same column names as they have different column names
colnames(inpatients_2011) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2012) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2013) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2014) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2015) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
# Checking for the datatypes for all the datasets
str(inpatients_2011)
str(inpatients_2012)
str(inpatients_2013)
str(inpatients_2014)
str(inpatients_2015)
# Key Finding: There is a difference in the datatype b/w (2011,12,13) & (2014,15) - factor vs num - due to $ sign
# Removing the $ sign for 2011, 12, 13
# Removing the $ sign for 2011
inpatients_2011$avg.covered.charges<-parse_number(inpatients_2011$avg.covered.charges)
inpatients_2011$avg.total.payments<-parse_number(inpatients_2011$avg.total.payments)
inpatients_2011$avg.medicare.payments<-parse_number(inpatients_2011$avg.medicare.payments)
# Removing the $ sign for 2012
inpatients_2012$avg.covered.charges<-parse_number(inpatients_2012$avg.covered.charges)
inpatients_2012$avg.total.payments<-parse_number(inpatients_2012$avg.total.payments)
inpatients_2012$avg.medicare.payments<-parse_number(inpatients_2012$avg.medicare.payments)
# Removing the $ sign for 2013
inpatients_2013$avg.covered.charges<-parse_number(inpatients_2013$avg.covered.charges)
inpatients_2013$avg.total.payments<-parse_number(inpatients_2013$avg.total.payments)
inpatients_2013$avg.medicare.payments<-parse_number(inpatients_2013$avg.medicare.payments)
# Changing the datatype of the factor columns to numeric for 2011, 12, 13
inpatients_2011$avg.covered.charges<- as.numeric(as.character(inpatients_2011$avg.covered.charges))
inpatients_2011$avg.total.payments<- as.numeric(as.character(inpatients_2011$avg.total.payments))
inpatients_2011$avg.medicare.payments <- as.numeric(as.character(inpatients_2011$avg.medicare.payments))
inpatients_2012$avg.covered.charges<- as.numeric(as.character(inpatients_2012$avg.covered.charges))
inpatients_2012$avg.total.payments<- as.numeric(as.character(inpatients_2012$avg.total.payments))
inpatients_2012$avg.medicare.payments <- as.numeric(as.character(inpatients_2012$avg.medicare.payments))
inpatients_2013$avg.covered.charges<- as.numeric(as.character(inpatients_2013$avg.covered.charges))
inpatients_2013$avg.total.payments<- as.numeric(as.character(inpatients_2013$avg.total.payments))
inpatients_2013$avg.medicare.payments <- as.numeric(as.character(inpatients_2013$avg.medicare.payments))
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the top 100 DRGs for 2011, 2012, 2013                                  #
#-----------------------------------------------------------------------------------------------#
top_100_Drgs_2011_to_2013 <- rbind (inpatients_2011, inpatients_2012, inpatients_2013)
write.csv(top_100_Drgs_2011_to_2013, file = "../../ProjectData/top100DRG_2011_2013.csv")
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the DRGs for 2011, 2012, 2013, 2014, 2015                              #
#-----------------------------------------------------------------------------------------------#
Drgs_2011_to_2015 <-  rbind (inpatients_2011, inpatients_2012, inpatients_2013, inpatients_2014, inpatients_2015)
write.csv(Drgs_2011_to_2015, file = "../../ProjectData/DRG_2011_2015.csv")
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the DRGs for 2014, 2015                                                #
#-----------------------------------------------------------------------------------------------#
All_Drgs_2014_to_2015 <- rbind (inpatients_2014, inpatients_2015)
write.csv(All_Drgs_2014_to_2015, file = "../../ProjectData/AllDRG_2014_2015.csv")
inpatients_2011<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2011.csv")
inpatients_2012<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2012.csv")
inpatients_2013<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2013.csv")
inpatients_2013<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2013.csv")
inpatients_2014<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2014.csv")
inpatients_2015<-read.csv("../../ProjectData/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2015.csv")
top_100_Drgs_2011_to_2013 <- rbind (inpatients_2011, inpatients_2012, inpatients_2013)
write.csv(top_100_Drgs_2011_to_2013, file = "../../ProjectData/Prepared/top100DRG_2011_2013.csv")
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the DRGs for 2011, 2012, 2013, 2014, 2015                              #
#-----------------------------------------------------------------------------------------------#
Drgs_2011_to_2015 <-  rbind (inpatients_2011, inpatients_2012, inpatients_2013, inpatients_2014, inpatients_2015)
write.csv(Drgs_2011_to_2015, file = "../../ProjectData/Prepared/DRG_2011_2015.csv")
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the DRGs for 2014, 2015                                                #
#-----------------------------------------------------------------------------------------------#
All_Drgs_2014_to_2015 <- rbind (inpatients_2014, inpatients_2015)
write.csv(All_Drgs_2014_to_2015, file = "../../ProjectData/Prepared/AllDRG_2014_2015.csv")
inpatients_2011<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2011.csv")
top_100_Drgs_2011_to_2013 <- rbind (inpatients_2011, inpatients_2012, inpatients_2013)
write.csv(top_100_Drgs_2011_to_2013, file = "../../Data/Prepared/top100DRG_2011_2013.csv")
#-----------------------------------------------------------------------------------------------#
# Creating a dataset for the DRGs for 2011, 2012, 2013, 2014, 2015                              #
#-----------------------------------------------------------------------------------------------#
Drgs_2011_to_2015 <-  rbind (inpatients_2011, inpatients_2012, inpatients_2013, inpatients_2014, inpatients_2015)
write.csv(Drgs_2011_to_2015, file = "../../Data/Prepared/DRG_2011_2015.csv")
top_100_Drgs_2011_to_2013 <- rbind (inpatients_2011, inpatients_2012, inpatients_2013)
write.csv(top_100_Drgs_2011_to_2013, file = "../../Data/Prepared/top100DRG_2011_2013.csv")
inpatients_2011<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2011.csv")
inpatients_2012<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2012.csv")
inpatients_2013<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_the_Top_100_Diagnosis-Related_Groups__DRG__-_FY2013.csv")
inpatients_2014<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2014.csv")
inpatients_2015<-read.csv("../../Data/Raw/Inpatient_Prospective_Payment_System__IPPS__Provider_Summary_for_All_Diagnosis-Related_Groups__DRG__-_FY2015.csv")
inpatients_2011$Year = 2011
inpatients_2012$Year = 2012
inpatients_2013$Year = 2013
inpatients_2014$Year = 2014
inpatients_2015$Year = 2015
colnames(inpatients_2011, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2012, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2013, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2014, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2015, do.NULL = TRUE, prefix = "col")
colnames(inpatients_2011) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2012) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2013) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2014) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
colnames(inpatients_2015) <- c("drg", "id", "provider", "address", "city", "state", "zipcode", "region", "discharges", "avg.covered.charges", "avg.total.payments", "avg.medicare.payments", "year")
str(inpatients_2011)
str(inpatients_2012)
str(inpatients_2013)
str(inpatients_2014)
str(inpatients_2015)
inpatients_2011$avg.covered.charges<-parse_number(inpatients_2011$avg.covered.charges)
inpatients_2011$avg.total.payments<-parse_number(inpatients_2011$avg.total.payments)
inpatients_2011$avg.medicare.payments<-parse_number(inpatients_2011$avg.medicare.payments)
# Removing the $ sign for 2012
inpatients_2012$avg.covered.charges<-parse_number(inpatients_2012$avg.covered.charges)
inpatients_2012$avg.total.payments<-parse_number(inpatients_2012$avg.total.payments)
inpatients_2012$avg.medicare.payments<-parse_number(inpatients_2012$avg.medicare.payments)
# Removing the $ sign for 2013
inpatients_2013$avg.covered.charges<-parse_number(inpatients_2013$avg.covered.charges)
inpatients_2013$avg.total.payments<-parse_number(inpatients_2013$avg.total.payments)
inpatients_2013$avg.medicare.payments<-parse_number(inpatients_2013$avg.medicare.payments)
inpatients_2011$avg.covered.charges<- as.numeric(as.character(inpatients_2011$avg.covered.charges))
inpatients_2011$avg.total.payments<- as.numeric(as.character(inpatients_2011$avg.total.payments))
inpatients_2011$avg.medicare.payments <- as.numeric(as.character(inpatients_2011$avg.medicare.payments))
inpatients_2012$avg.covered.charges<- as.numeric(as.character(inpatients_2012$avg.covered.charges))
inpatients_2012$avg.total.payments<- as.numeric(as.character(inpatients_2012$avg.total.payments))
inpatients_2012$avg.medicare.payments <- as.numeric(as.character(inpatients_2012$avg.medicare.payments))
inpatients_2013$avg.covered.charges<- as.numeric(as.character(inpatients_2013$avg.covered.charges))
inpatients_2013$avg.total.payments<- as.numeric(as.character(inpatients_2013$avg.total.payments))
inpatients_2013$avg.medicare.payments <- as.numeric(as.character(inpatients_2013$avg.medicare.payments))
top_100_Drgs_2011_to_2013 <- rbind (inpatients_2011, inpatients_2012, inpatients_2013)
write.csv(top_100_Drgs_2011_to_2013, file = "../../Data/Prepared/top100DRG_2011_2013.csv")
Drgs_2011_to_2015 <-  rbind (inpatients_2011, inpatients_2012, inpatients_2013, inpatients_2014, inpatients_2015)
write.csv(Drgs_2011_to_2015, file = "../../Data/Prepared/DRG_2011_2015.csv")
All_Drgs_2014_to_2015 <- rbind (inpatients_2014, inpatients_2015)
write.csv(All_Drgs_2014_to_2015, file = "../../Data/Prepared/AllDRG_2014_2015.csv")
View(top_100_Drgs_2011_to_2013)
View(Drgs_2011_to_2015)
install.packages(c("acs", "devtools", "dplyr", "knitr", "leaflet", "readxl", "rmarkdown", "shiny", "stringr", "tidyr"))
library(gapminder)
install.packages("gapminder")
library(plotly)
library(gapminder)
View(gapminder)
p <- gapminder %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
) %>%
layout(
xaxis = list(
type = "log"
)
)
p
View(cost_breakdown)
all_DRGdata <- read.csv("../../Data/Prepared/DRG_2011_2015.csv")
setwd("~/Desktop/Population Health Metrics/Project_Medi/R_Scripts/DataWrangling")
all_DRGdata <- read.csv("../../Data/Prepared/DRG_2011_2015.csv")
cost_breakdown<- all_DRGdata %>% group_by(drg) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
View(cost_breakdown)
cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
year_cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
View(year_cost_breakdown)
drg_category <- read.csv("../../Data/Prepared/DRGs_with_categories.csv")
colnames(drg_category)<- c("drg","body_system", "medical_department", "body_part")
discharges <- read.csv("../../Data/Prepared/overall_drg_discharges.csv")
colnames(discharges) <- c("drg","2011", "2012", "2013", "2014", "2015", "total")
covered_charges <- read.csv("../../Data/Prepared/overall_drg_avg_covered_charges.csv")
colnames(covered_charges) <- c("drg","2011", "2012", "2013", "2014", "2015", "avg")
total_payments <- read.csv("../../Data/Prepared/overall_drg_avg_total_payments.csv")
colnames(total_payments) <- c("drg","2011", "2012", "2013", "2014", "2015", "avg")
medicare_payments <- read.csv("../../Data/Prepared/overall_drg_avg_medicare_payments.csv")
colnames(medicare_payments ) <- c("drg","2011", "2012", "2013", "2014", "2015", "avg")
View(body_system_discharges)
discharges <- discharges %>% merge(drg_category, by = "drg")
body_system_discharges <- discharges %>% group_by(body_system) %>% summarise( discharges_2011 = sum(`2011`),
discharges_2012 = sum(`2012`),
discharges_2013 = sum(`2013`),
discharges_2014 = sum(`2014`),
discharges_2015 = sum(`2015`),
total_discharges = sum(total)) %>% arrange(-total_discharges)
write.csv(body_system_discharges, file = "../../Data/Prepared/body_system_discharges.csv", row.names=FALSE)
View(body_system_discharges)
View(medical_dept_discharges)
medical_dept_discharges <- discharges %>% group_by(medical_department) %>% summarise( discharges_2011 = sum(`2011`),
discharges_2012 = sum(`2012`),
discharges_2013 = sum(`2013`),
discharges_2014 = sum(`2014`),
discharges_2015 = sum(`2015`),
total_discharges = sum(total)) %>% arrange(-total_discharges) %>%  arrange(-total_discharges)
write.csv(medical_dept_discharges, file = "../../Data/Prepared/medical_dept_discharges.csv", row.names=FALSE)
View(medical_dept_discharges)
View(year_cost_breakdown)
year_cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
View(year_cost_breakdown)
year_cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
View(year_cost_breakdown)
write.csv(year_cost_breakdown, file = "../../Data/Prepared/year_cost_breakdown.csv", row.names=FALSE)
Viewd(dry_year_breakdown)
View(drg_year_breakdown)
drg_year_breakdown <- read.csv("../../Data/Prepared/year_cost_breakdown.csv")
View(drg_year_breakdown)
x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(
xaxis = list(
type = "log"
)
)
x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>% layout(xaxis = list(type = "log"))
discharge_medicare <- drg_year_breakdown %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>% layout(xaxis = list(type = "log"))
discharge_medicare
discharge_medicare <- drg_year_breakdown %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="hello"))
discharge_medicare
discharge_medicare <- drg_year_breakdown %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Number of Discharges") )
discharge_medicare <- drg_year_breakdown %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payment"))
discharge_medicare
drg_year_breakdown_top50 <- drg_year_breakdown %>% arrange(-discharges)
drg_year_breakdown_top50 <- head(drg_year_breakdown, 50)
discharge_medicare_top50 <- drg_year_breakdown_top50 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments"))
discharge_medicare_top50
View(drg_year_breakdown_top50)
drg_year_breakdown <- drg_year_breakdown %>% arrange(-discharges, drg)
View(top_50_discharges)
View(top_50_discharges)
all_DRGdata <- read.csv("../../Data/Prepared/DRG_2011_2015.csv")
View(all_DRGdata)
# Overall Discharges
# Spreading the data so that each year is a column
DRG_overall_discharges <- all_DRGdata %>% group_by(year, drg) %>% summarise (discharges = sum(discharges)) %>% spread( year, discharges)
# Making all NA Values 0
DRG_overall_discharges[is.na(DRG_overall_discharges)] <- 0
# Creating a column called total for the total amount of discharges
DRG_overall_discharges <- DRG_overall_discharges %>% mutate(total_discharges = DRG_overall_discharges$`2011` +
DRG_overall_discharges$`2012` +
DRG_overall_discharges$`2013`+
DRG_overall_discharges$`2014`+
DRG_overall_discharges$`2015`) %>% arrange (-total_discharges)
colnames()
write.csv(DRG_overall_discharges, file = "../../Data/Prepared/overall_drg_discharges.csv", row.names=FALSE)
top_5_discharges <- head(DRG_overall_discharges, 5)
write.csv(top_5_discharges, file = "../../Data/Prepared/top_5_discharges.csv", row.names=FALSE)
top_10_discharges <- head(DRG_overall_discharges, 10)
write.csv(top_10_discharges, file = "../../Data/Prepared/top_10_discharges.csv", row.names=FALSE)
top_20_discharges <- head(DRG_overall_discharges, 20)
write.csv(top_20_discharges, file = "../../Data/Prepared/top_20_discharges.csv", row.names=FALSE)
View(top_20_discharges)
top_50_discharges <- head(DRG_overall_discharges, 50)
write.csv(top_50_discharges, file = "../../Data/Prepared/top_50_discharges.csv", row.names=FALSE)
top_100_discharges <- head(DRG_overall_discharges, 100)
top_50_discharges <- head(DRG_overall_discharges, 50)
DRG_overall_discharges <- all_DRGdata %>% group_by(year, drg) %>% summarise (discharges = sum(discharges)) %>% spread( year, discharges)
library(plotly)
library(ggplot2)
library(dplyr)
library(tidyr)
DRG_overall_discharges <- all_DRGdata %>% group_by(year, drg) %>% summarise (discharges = sum(discharges)) %>% spread( year, discharges)
DRG_overall_discharges[is.na(DRG_overall_discharges)] <- 0
DRG_overall_discharges <- DRG_overall_discharges %>% mutate(total_discharges = DRG_overall_discharges$`2011` +
DRG_overall_discharges$`2012` +
DRG_overall_discharges$`2013`+
DRG_overall_discharges$`2014`+
DRG_overall_discharges$`2015`) %>% arrange (-total_discharges)
top_50_discharges <- head(DRG_overall_discharges, 50)
View(top_50_discharges)
top_100_discharges <- head(DRG_overall_discharges, 100)
View(top_100_discharges)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semijoin(year_cost_breakdown, top_100_discharges, by ="drg")
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semi_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
View(year_cost_breakdown)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semi_join(year_cost_breakdown, top_100_discharges, by ="drg")
library(dplyr)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semi_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
year_cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semi_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
top_100_discharges <- top_100_discharges %>% mutate( qualify ="yo")
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% semi_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% left_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% right_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown_top50Discharges)
top_100_discharges <- top_100_discharges %>% mutate( qualify ="yo")
year_cost_breakdown_top50Discharges <- year_cost_breakdown %>% right_join(year_cost_breakdown, top_100_discharges, by ="drg")
View(year_cost_breakdown)
View(top_100_discharges)
top_100_discharge_names <- top_100_discharges %>% select(drg)
top_100_discharges_50 <- year_cost_breakdown %>% semi_join(top_100_discharge_names, by = "drg")
View(top_100_discharges_50)
discharge_top100_medicare
drg_year_breakdown_top100 <- read.csv("../../Data/Prepared/year_cost_breakdown_top100.csv")
drg_year_breakdown_top100 <- read.csv("../../Data/Prepared/year_cost_breakdown_top100.csv")
year_cost_breakdown <- all_DRGdata %>% group_by(drg, year, medical_department) %>% summarise (discharges = sum(discharges),
avg_medicare_payment = mean(avg_medicare_payments),
avg_covered_charge = mean(avg_covered_charges),
avg_total_payment = mean(avg_total_payments)) %>% arrange (-discharges)
write.csv(year_cost_breakdown, file = "../../Data/Prepared/year_cost_breakdown.csv", row.names=FALSE)
top_100_discharge_names <- top_100_discharges %>% select(drg)
year_cost_breakdown_100 <- year_cost_breakdown %>% semi_join(top_100_discharge_names, by = "drg")
write.csv(year_cost_breakdown_100 , file = "../../Data/Prepared/year_cost_breakdown_100.csv", row.names=FALSE)
drg_year_breakdown_top100 <- read.csv("../../Data/Prepared/year_cost_breakdown_100.csv")
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments"))
discharge_top100_medicare
library(plotly)
library(gapminder)
discharge_top100_medicare
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments"))
discharge_top100_medicare
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments")) %>%
animation_opts(
1000, easing = "elastic", redraw = FALSE
)
discharge_top100_medicare
xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments")) %>%
animation_opts(1000, easing = "elastic", redraw = FALSE)
discharge_top100_medicare
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(title = 'Average Medicare Payments Changing with Time and Discharges',
xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments")) %>%
animation_opts(1000, easing = "elastic", redraw = FALSE)
discharge_top100_medicare
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(title = 'Average Medicare Payments Changing with Time for DRGS with Highest Discharges (top 100)',
xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments")) %>%
animation_opts(1000, easing = "elastic", redraw = FALSE)
discharge_top100_medicare <- drg_year_breakdown_top100 %>% plot_ly(x = ~discharges,
y = ~avg_medicare_payment,
color = ~medical_department,
frame = ~year,
text = ~drg,
hoverinfo = "text",
type = 'scatter',
mode = 'markers') %>%
layout(title = 'Average Medicare Payments Changing with Time for DRGS with Highest Discharges (top 100)',
xaxis = list(type = "log", title="Number of Discharges"),
yaxis =list(title="Average Medicare Payments")) %>%
animation_opts(1000, easing = "elastic", redraw = FALSE)
discharge_top100_medicare
installed.packages("stringi.so")
installed.packages("stringi.so")
installed.packages("LibPath")
install.packages("stringi.so")
install.packages("knitr")
library("dynam")
install.packages("dynam")
> install.packages("stringi",dep=TRUE)
install.packages("stringi",dep=TRUE)
install.packages(c("acs", "callr", "cluster", "hexbin", "htmlTable", "htmlwidgets", "knitr", "mapproj", "Matrix", "mgcv", "quantreg", "rmarkdown", "rsconnect", "stringr", "survival", "tidyselect", "viridis", "viridisLite", "WDI", "withr", "XML", "yaml"))
install.packages(c("acs", "callr", "cluster", "hexbin", "htmlTable", "htmlwidgets", "knitr", "mapproj", "Matrix", "mgcv", "quantreg", "rmarkdown", "rsconnect", "stringr", "survival", "tidyselect", "viridis", "viridisLite", "WDI", "withr", "XML", "yaml"))
install.packages(c("acs", "callr", "cluster", "hexbin", "htmlTable", "htmlwidgets", "knitr", "mapproj", "Matrix", "mgcv", "quantreg", "rmarkdown", "rsconnect", "stringr", "survival", "tidyselect", "viridis", "viridisLite", "WDI", "withr", "XML", "yaml"))
install.packages(c("acs", "callr", "cluster", "hexbin", "htmlTable", "htmlwidgets", "knitr", "mapproj", "Matrix", "mgcv", "quantreg", "rmarkdown", "rsconnect", "stringr", "survival", "tidyselect", "viridis", "viridisLite", "WDI", "withr", "XML", "yaml"))
install.packages("stringi")
install.packages("installr")
remove.packages(stringi, lib)
unlink("/Library/Frameworks/R.framework/Versions/3.3/Resources/library/00LOCK-stringi", recursive = TRUE)
install.packages("installr")
remove.packages(stringi, lib)
install.packages("installr")
install.packages("stringi")
discharge_top100_medicare
